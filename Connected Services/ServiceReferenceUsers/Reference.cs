//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightCrm.ServiceReferenceUsers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUsers.IUsersService")]
    public interface IUsersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/AddNewUser", ReplyAction="http://tempuri.org/IUsersService/AddNewUserResponse")]
        void AddNewUser(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/AddNewUser", ReplyAction="http://tempuri.org/IUsersService/AddNewUserResponse")]
        System.Threading.Tasks.Task AddNewUserAsync(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/UpdateUser", ReplyAction="http://tempuri.org/IUsersService/UpdateUserResponse")]
        void UpdateUser(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/UpdateUser", ReplyAction="http://tempuri.org/IUsersService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/UpdateUserPassword", ReplyAction="http://tempuri.org/IUsersService/UpdateUserPasswordResponse")]
        void UpdateUserPassword(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/UpdateUserPassword", ReplyAction="http://tempuri.org/IUsersService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task UpdateUserPasswordAsync(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/DeleteUser", ReplyAction="http://tempuri.org/IUsersService/DeleteUserResponse")]
        void DeleteUser(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/DeleteUser", ReplyAction="http://tempuri.org/IUsersService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(CrmModels.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetUsers", ReplyAction="http://tempuri.org/IUsersService/GetUsersResponse")]
        CrmModels.UserDto[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetUsers", ReplyAction="http://tempuri.org/IUsersService/GetUsersResponse")]
        System.Threading.Tasks.Task<CrmModels.UserDto[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetUserByLoginData", ReplyAction="http://tempuri.org/IUsersService/GetUserByLoginDataResponse")]
        CrmModels.UserDto GetUserByLoginData(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetUserByLoginData", ReplyAction="http://tempuri.org/IUsersService/GetUserByLoginDataResponse")]
        System.Threading.Tasks.Task<CrmModels.UserDto> GetUserByLoginDataAsync(string login, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersServiceChannel : LightCrm.ServiceReferenceUsers.IUsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersServiceClient : System.ServiceModel.ClientBase<LightCrm.ServiceReferenceUsers.IUsersService>, LightCrm.ServiceReferenceUsers.IUsersService {
        
        public UsersServiceClient() {
        }
        
        public UsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewUser(CrmModels.UserDto userDto) {
            base.Channel.AddNewUser(userDto);
        }
        
        public System.Threading.Tasks.Task AddNewUserAsync(CrmModels.UserDto userDto) {
            return base.Channel.AddNewUserAsync(userDto);
        }
        
        public void UpdateUser(CrmModels.UserDto userDto) {
            base.Channel.UpdateUser(userDto);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(CrmModels.UserDto userDto) {
            return base.Channel.UpdateUserAsync(userDto);
        }
        
        public void UpdateUserPassword(CrmModels.UserDto userDto) {
            base.Channel.UpdateUserPassword(userDto);
        }
        
        public System.Threading.Tasks.Task UpdateUserPasswordAsync(CrmModels.UserDto userDto) {
            return base.Channel.UpdateUserPasswordAsync(userDto);
        }
        
        public void DeleteUser(CrmModels.UserDto userDto) {
            base.Channel.DeleteUser(userDto);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(CrmModels.UserDto userDto) {
            return base.Channel.DeleteUserAsync(userDto);
        }
        
        public CrmModels.UserDto[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<CrmModels.UserDto[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public CrmModels.UserDto GetUserByLoginData(string login, string password) {
            return base.Channel.GetUserByLoginData(login, password);
        }
        
        public System.Threading.Tasks.Task<CrmModels.UserDto> GetUserByLoginDataAsync(string login, string password) {
            return base.Channel.GetUserByLoginDataAsync(login, password);
        }
    }
}
