//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightCrm.ServiceReferenceRoles {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceRoles.IRolesService")]
    public interface IRolesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/AddNewRole", ReplyAction="http://tempuri.org/IRolesService/AddNewRoleResponse")]
        void AddNewRole(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/AddNewRole", ReplyAction="http://tempuri.org/IRolesService/AddNewRoleResponse")]
        System.Threading.Tasks.Task AddNewRoleAsync(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/UpdateRole", ReplyAction="http://tempuri.org/IRolesService/UpdateRoleResponse")]
        void UpdateRole(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/UpdateRole", ReplyAction="http://tempuri.org/IRolesService/UpdateRoleResponse")]
        System.Threading.Tasks.Task UpdateRoleAsync(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/DeleteRole", ReplyAction="http://tempuri.org/IRolesService/DeleteRoleResponse")]
        void DeleteRole(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/DeleteRole", ReplyAction="http://tempuri.org/IRolesService/DeleteRoleResponse")]
        System.Threading.Tasks.Task DeleteRoleAsync(CrmModels.RoleDto roleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/GetRoles", ReplyAction="http://tempuri.org/IRolesService/GetRolesResponse")]
        CrmModels.RoleDto[] GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/GetRoles", ReplyAction="http://tempuri.org/IRolesService/GetRolesResponse")]
        System.Threading.Tasks.Task<CrmModels.RoleDto[]> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/GetRoleById", ReplyAction="http://tempuri.org/IRolesService/GetRoleByIdResponse")]
        CrmModels.RoleDto GetRoleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/GetRoleById", ReplyAction="http://tempuri.org/IRolesService/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<CrmModels.RoleDto> GetRoleByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRolesServiceChannel : LightCrm.ServiceReferenceRoles.IRolesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolesServiceClient : System.ServiceModel.ClientBase<LightCrm.ServiceReferenceRoles.IRolesService>, LightCrm.ServiceReferenceRoles.IRolesService {
        
        public RolesServiceClient() {
        }
        
        public RolesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RolesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewRole(CrmModels.RoleDto roleDto) {
            base.Channel.AddNewRole(roleDto);
        }
        
        public System.Threading.Tasks.Task AddNewRoleAsync(CrmModels.RoleDto roleDto) {
            return base.Channel.AddNewRoleAsync(roleDto);
        }
        
        public void UpdateRole(CrmModels.RoleDto roleDto) {
            base.Channel.UpdateRole(roleDto);
        }
        
        public System.Threading.Tasks.Task UpdateRoleAsync(CrmModels.RoleDto roleDto) {
            return base.Channel.UpdateRoleAsync(roleDto);
        }
        
        public void DeleteRole(CrmModels.RoleDto roleDto) {
            base.Channel.DeleteRole(roleDto);
        }
        
        public System.Threading.Tasks.Task DeleteRoleAsync(CrmModels.RoleDto roleDto) {
            return base.Channel.DeleteRoleAsync(roleDto);
        }
        
        public CrmModels.RoleDto[] GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<CrmModels.RoleDto[]> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public CrmModels.RoleDto GetRoleById(int id) {
            return base.Channel.GetRoleById(id);
        }
        
        public System.Threading.Tasks.Task<CrmModels.RoleDto> GetRoleByIdAsync(int id) {
            return base.Channel.GetRoleByIdAsync(id);
        }
    }
}
